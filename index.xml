<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:rr="https://reliability.re/rss-ns-spec-1.0/" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule"><channel><title>Reliability Report üì∞</title><link>https://reliability.re/</link><description>A collaborative curated content site about Reliability Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><creativeCommons:license>https://creativecommons.org/licenses/by-sa/4.0/</creativeCommons:license><lastBuildDate>Sun, 20 Sep 2020 10:07:04 +0200</lastBuildDate><atom:link href="https://reliability.re/index.xml" rel="self" type="application/rss+xml"/><item><title>Why you should take care of infrastructure drift</title><link>https://driftctl.com/2020/11/24/infrastructure-drift</link><pubDate>Fri, 27 Nov 2020 16:45:02 +0000</pubDate><author>GeraldC13@users.noreply.github.com (GeraldC13)</author><guid>https://reliability.re/links/2020-11-27-why-you-should-take-care-of-infrastructure-drift/</guid><description>&lt;p>&lt;em>This article is the first outcome of a call for participation to a study on infrastructure drift we launched at the last Paris SRE Meetup. As part of our work on ‚Äòdrittctl‚Äô we are writing a report on how infrastructure drift can be a challenge for DevOps teams, and how they address it. The goal is to share with the community core problems and best practices.
Here is a foretaste of this study, outlining some of the key facts we recorded.&lt;/em>&lt;/p>
&lt;p>When talking about infrastructure drift, you often get knowing glances and heated answers. Recording gaps in your infra between what you expected to be and the reality of what is, is a well known and wide spread issue bothering hundreds of teams around the globe. Facing impacts and consequences ranging from intensive toil to dangerous security threats, many team are keenly aware of the issue and actively looking for solutions.&lt;/p>
&lt;p>We decided to look more closely into how they deal with it and conducted a study that will be released in the coming weeks.&lt;/p></description><rr:github>GeraldC13</rr:github><rr:twitter>GeraldCrescione</rr:twitter><rr:hashtags>#DevOps,#SRE</rr:hashtags><rr:plain>This article is the first outcome of a call for participation to a study on infrastructure drift we launched at the last Paris SRE Meetup. As part of our work on ‚Äòdrittctl‚Äô we are writing a report on how infrastructure drift can be a challenge for DevOps teams, and how they address it. The goal is to share with the community core problems and best practices. Here is a foretaste of this study, outlining some of the key facts we recorded.
When talking about infrastructure drift, you often get knowing glances and heated answers. Recording gaps in your infra between what you expected to be and the reality of what is, is a well known and wide spread issue bothering hundreds of teams around the globe. Facing impacts and consequences ranging from intensive toil to dangerous security threats, many team are keenly aware of the issue and actively looking for solutions.
We decided to look more closely into how they deal with it and conducted a study that will be released in the coming weeks.</rr:plain></item><item><title>Introducing Non-Abstract Large System Design</title><link>https://landing.google.com/sre/workbook/chapters/non-abstract-design/</link><pubDate>Sun, 22 Nov 2020 17:36:25 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-11-22-introducing-non-abstract-large-system-design/</guid><description>&lt;p>Non-Abstract Large System Design (NALSD) a very useful and critical skill for SREs: ‚ÄúBy breaking down software into logical components and placing these components into a production ecosystem with reliable infrastructure, we arrive at systems that provide reasonable and appropriate targets for data consistency, system availability, and resource efficiency.‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SRE,#NALSD</rr:hashtags><rr:plain>Non-Abstract Large System Design (NALSD) a very useful and critical skill for SREs: ‚ÄúBy breaking down software into logical components and placing these components into a production ecosystem with reliable infrastructure, we arrive at systems that provide reasonable and appropriate targets for data consistency, system availability, and resource efficiency.‚Äù</rr:plain></item><item><title>All Day DevOps 2020</title><link>https://www.alldaydevops.com/2020-fallschedule</link><pubDate>Wed, 11 Nov 2020 18:50:20 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-11-11-all-day-devops-2020/</guid><description>&lt;p>Hey, in case you missed it, tomorrow (Nov 12) starts the 2020 Fall edition of the @AllDayDevOps conference, with talks during 24 hours by 180 speakers around the world, the event is held entirely online and the registration is free. Take a look at the schedule&amp;hellip; there&amp;rsquo;s even a dedicated SRE track!&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#addo,#sre,#devops</rr:hashtags><rr:plain>Hey, in case you missed it, tomorrow (Nov 12) starts the 2020 Fall edition of the @AllDayDevOps conference, with talks during 24 hours by 180 speakers around the world, the event is held entirely online and the registration is free. Take a look at the schedule&amp;hellip; there&amp;rsquo;s even a dedicated SRE track!</rr:plain></item><item><title>SLO ‚Äî From Nothing to‚Ä¶ Production</title><link>https://geototti21.medium.com/slo-from-nothing-to-production-91b8d4270bd5</link><pubDate>Wed, 04 Nov 2020 20:48:25 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-11-04-slo-from-nothing-to-production/</guid><description>&lt;p>If you don‚Äôt know how to start introducing SLOs at work, this a great example from Ioannis (@geototti21) and his journey to bring SLOs into his organization with a clear path and framework. As he said ‚ÄúExplain how SLOs can be an important internal tracking target that is tougher than your SLA. Also, mention how we can use the SLOs to offer better SLAs than ‚Äúservice uptime‚Äù if we are asked‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SLOs,#SRE</rr:hashtags><rr:plain>If you don‚Äôt know how to start introducing SLOs at work, this a great example from Ioannis (@geototti21) and his journey to bring SLOs into his organization with a clear path and framework. As he said ‚ÄúExplain how SLOs can be an important internal tracking target that is tougher than your SLA. Also, mention how we can use the SLOs to offer better SLAs than ‚Äúservice uptime‚Äù if we are asked‚Äù</rr:plain></item><item><title>Why is 100% reliability the wrong target?</title><link>https://landing.google.com/sre/workbook/chapters/implementing-slos/#reliability-targets-and-error-budgets</link><pubDate>Tue, 27 Oct 2020 22:33:56 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-27-why-is-100-reliability-the-wrong-target/</guid><description>&lt;p>If you want to know why 100% reliability is the wrong target go to &lt;a href="https://landing.google.com/sre/workbook/chapters/implementing-slos/#reliability-targets-and-error-budgets">Chapter 2 of the SRE Workbook&lt;/a>, you&amp;rsquo;ll find ‚Äú‚Ä¶ as you go from 99% to 99.9% to 99.99% reliability, each extra nine comes at an increased cost, but the marginal utility to your customers steadily approaches zero‚Äù between other good reasons&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>If you want to know why 100% reliability is the wrong target go to Chapter 2 of the SRE Workbook, you&amp;rsquo;ll find ‚Äú‚Ä¶ as you go from 99% to 99.9% to 99.99% reliability, each extra nine comes at an increased cost, but the marginal utility to your customers steadily approaches zero‚Äù between other good reasons</rr:plain></item><item><title>The Production Readiness Spectrum</title><link>https://dastergon.gr/posts/2020/09/the-production-readiness-spectrum/</link><pubDate>Sat, 24 Oct 2020 01:00:36 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-24-the-production-readiness-spectrum/</guid><description>&lt;p>If you&amp;rsquo;re looking to adopt Production Readiness reviews, this is an insightful post from Pavlos blog (@dastergon), on it, he summarizes several aspects of Production Readiness reviews, like the spectrum from 1-sided to full automated reviews or examples of Production Readiness checklists from several companies, as well as what can the reviews bring to an organization: ‚ÄúProduction Readiness Reviews are a powerful tool that enables us to provide a common language for our production standards across the organization. It increases our confidence throughout the whole lifecycle of a service and builds trust between product development and SRE teams‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>If you&amp;rsquo;re looking to adopt Production Readiness reviews, this is an insightful post from Pavlos blog (@dastergon), on it, he summarizes several aspects of Production Readiness reviews, like the spectrum from 1-sided to full automated reviews or examples of Production Readiness checklists from several companies, as well as what can the reviews bring to an organization: ‚ÄúProduction Readiness Reviews are a powerful tool that enables us to provide a common language for our production standards across the organization. It increases our confidence throughout the whole lifecycle of a service and builds trust between product development and SRE teams‚Äù</rr:plain></item><item><title>how they test ?</title><link>https://abhivaikar.github.io/howtheytest</link><pubDate>Fri, 09 Oct 2020 13:57:41 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-10-09-how-they-test-/</guid><description>&lt;p>Testing a software is like &lt;em>good practices&lt;/em>: everyone has its own interpretation. It&amp;rsquo;s something really interesting to see &lt;strong>how&lt;/strong> other companies test their software and &lt;strong>which tools&lt;/strong> they use, in order to define your own test strategy fitting your own use-cases.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Testing a software is like good practices: everyone has its own interpretation. It&amp;rsquo;s something really interesting to see how other companies test their software and which tools they use, in order to define your own test strategy fitting your own use-cases.</rr:plain></item><item><title>Observability 101: Terminology and Concepts</title><link>https://www.honeycomb.io/blog/observability-101-terminology-and-concepts/</link><pubDate>Fri, 09 Oct 2020 06:51:43 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-09-observability-101-terminology-and-concepts/</guid><description>&lt;p>This succinct article from the &lt;a href="https://www.honeycomb.io/blog/">Honeycomb blog&lt;/a> is a great starting point to understand the fundamentals of Observability, like metrics, logs, traces and structured events, as well as the concepts of context, dimensionality and cardinality. It also includes additional links for further reading about #o11y and distributed tracing.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This succinct article from the Honeycomb blog is a great starting point to understand the fundamentals of Observability, like metrics, logs, traces and structured events, as well as the concepts of context, dimensionality and cardinality. It also includes additional links for further reading about #o11y and distributed tracing.</rr:plain></item><item><title>Chaos Engineering: The Path to Reliability</title><link>https://www.chaosconf.io/</link><pubDate>Tue, 06 Oct 2020 19:04:54 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-06-chaos-engineering-the-path-to-reliability/</guid><description>&lt;p>This was an very interesting talk, providing a great introduction to Chaos Engineering concepts, good advice with Do&amp;rsquo;s and Don&amp;rsquo;ts and a clear path to reliability (Scan, Baseline, Analyze &amp;amp; Plan, Harden and Report) by Kolton Andrus from &lt;a href="https://www.gremlin.com/">Gremlin, Inc&lt;/a>. Don&amp;rsquo;t hesitate to register to the #ChaosConf there are still 2 days full of interesting topics to come!&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This was an very interesting talk, providing a great introduction to Chaos Engineering concepts, good advice with Do&amp;rsquo;s and Don&amp;rsquo;ts and a clear path to reliability (Scan, Baseline, Analyze &amp;amp; Plan, Harden and Report) by Kolton Andrus from Gremlin, Inc. Don&amp;rsquo;t hesitate to register to the #ChaosConf there are still 2 days full of interesting topics to come!</rr:plain></item><item><title>Under Deconstruction: The State of Shopify‚Äôs Monolith</title><link>https://engineering.shopify.com/blogs/engineering/shopify-monolith</link><pubDate>Fri, 02 Oct 2020 08:00:06 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-10-02-under-deconstruction-the-state-of-shopifys-monolith/</guid><description>&lt;p>Another feedback on RoR application migration @ Shopify with a long paper explaining the different steps / challenges (showing a few hints / IRL examples).&lt;/p>
&lt;p>It&amp;rsquo;s an interesting reading, since the question of Monolith vs modular applications is not &lt;em>easy&lt;/em> to answer and there is &lt;strong>no generic&lt;/strong> method to &lt;em>solve&lt;/em> it.&lt;/p>
&lt;blockquote>
&lt;p>So, we developed a new tool called Packwerk to analyze static constant references. [&amp;hellip;] We‚Äôre planning to make Packwerk open source soon. Stay tuned!&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;m definitely looking for to see how they proceed and why not try to make it language agnostic.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Another feedback on RoR application migration @ Shopify with a long paper explaining the different steps / challenges (showing a few hints / IRL examples).
It&amp;rsquo;s an interesting reading, since the question of Monolith vs modular applications is not easy to answer and there is no generic method to solve it.
So, we developed a new tool called Packwerk to analyze static constant references. [&amp;hellip;] We‚Äôre planning to make Packwerk open source soon. Stay tuned!
I&amp;rsquo;m definitely looking for to see how they proceed and why not try to make it language agnostic.</rr:plain></item><item><title>RR RSS Namespace Specification 1.0</title><link/><pubDate>Sun, 20 Sep 2020 10:07:04 +0200</pubDate><guid>https://reliability.re/rss-ns-spec-1.0/</guid><description>&lt;p>This namespace is an extension for the Reliability Report website following the &lt;a href="https://validator.w3.org/feed/docs/rss2.html">RSS 2.0 spec format&lt;/a>.&lt;/p>
&lt;h2 id="changes">Changes&lt;/h2>
&lt;ul>
&lt;li>&lt;em>2020-09-20T10:37:12+02:00&lt;/em> Initial version&lt;/li>
&lt;/ul>
&lt;h2 id="namespace-declarations">Namespace Declarations&lt;/h2>
&lt;p>&lt;code>xmlns:rr=&amp;quot;https://reliability.re/rss-ns-spec-1.0/&amp;quot;&lt;/code>&lt;/p>
&lt;h2 id="model">Model&lt;/h2>
&lt;p>&lt;code>&amp;lt;item&amp;gt;&lt;/code> Elements:&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;lt;rr:github&amp;gt;&lt;/code> Github&amp;rsquo;s username of the item&amp;rsquo;s curator (just the login name not the URL to the profile page).&lt;/li>
&lt;li>&lt;code>&amp;lt;rr:twitter&amp;gt;&lt;/code> Twitter&amp;rsquo;s username of the item&amp;rsquo;s curator (just the login name not the URL to the profile page).&lt;/li>
&lt;li>&lt;code>&amp;lt;rr:hashtags&amp;gt;&lt;/code> Hashtags that can be used to improve sharing on social media&lt;/li>
&lt;li>&lt;code>&amp;lt;rr:plain&amp;gt;&lt;/code> A plain-text version of the item&amp;rsquo;s curated content.&lt;/li>
&lt;/ul>
&lt;h2 id="example">Example&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;rss&lt;/span> &lt;span style="color:#a6e22e">version=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:rr=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://reliability.re/rss-ns-spec-1.0/&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;channel&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;title&amp;gt;&lt;/span>Reliability Report&lt;span style="color:#f92672">&amp;lt;/title&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;link&amp;gt;&lt;/span>https://reliability.re&lt;span style="color:#f92672">&amp;lt;/link&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;description&amp;gt;&lt;/span>A site about Reliability Engineering&lt;span style="color:#f92672">&amp;lt;/description&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;language&amp;gt;&lt;/span>en-us&lt;span style="color:#f92672">&amp;lt;/language&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;lastBuildDate&amp;gt;&lt;/span>Fri, 18 Sep 2020 18:46:54 +0000&lt;span style="color:#f92672">&amp;lt;/lastBuildDate&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;item&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;title&amp;gt;&lt;/span>Debugging Go in prod using eBPF&lt;span style="color:#f92672">&amp;lt;/title&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;link&amp;gt;&lt;/span>https://blog.pixielabs.ai/blog/&lt;span style="color:#f92672">&amp;lt;/link&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;pubDate&amp;gt;&lt;/span>Fri, 18 Sep 2020 18:46:54 +0000&lt;span style="color:#f92672">&amp;lt;/pubDate&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;author&amp;gt;&lt;/span>pabluk@users.noreply.github.com (pabluk)&lt;span style="color:#f92672">&amp;lt;/author&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;guid&amp;gt;&lt;/span>2020-09-18-debugging-go-in-prod-using-ebpf&lt;span style="color:#f92672">&amp;lt;/guid&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;description&amp;gt;&lt;/span>How to debug Go programs using &amp;amp;lt;b&amp;amp;gt;eBPF&amp;amp;lt;/b&amp;amp;gt;&lt;span style="color:#f92672">&amp;lt;/description&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;rr:github&amp;gt;&lt;/span>pabluk&lt;span style="color:#f92672">&amp;lt;/rr:github&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;rr:twitter&amp;gt;&lt;/span>pabluk&lt;span style="color:#f92672">&amp;lt;/rr:twitter&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;rr:hashtags&amp;gt;&lt;/span>debugging,go,eBPF,linux&lt;span style="color:#f92672">&amp;lt;/rr:hashtags&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;rr:plain&amp;gt;&lt;/span>How to debug Go programs using eBPF&lt;span style="color:#f92672">&amp;lt;/rr:plain&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/item&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/channel&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/rss&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description><rr:plain>This namespace is an extension for the Reliability Report website following the RSS 2.0 spec format.
Changes 2020-09-20T10:37:12+02:00 Initial version Namespace Declarations xmlns:rr=&amp;quot;https://reliability.re/rss-ns-spec-1.0/&amp;quot;
Model &amp;lt;item&amp;gt; Elements:
&amp;lt;rr:github&amp;gt; Github&amp;rsquo;s username of the item&amp;rsquo;s curator (just the login name not the URL to the profile page). &amp;lt;rr:twitter&amp;gt; Twitter&amp;rsquo;s username of the item&amp;rsquo;s curator (just the login name not the URL to the profile page). &amp;lt;rr:hashtags&amp;gt; Hashtags that can be used to improve sharing on social media &amp;lt;rr:plain&amp;gt; A plain-text version of the item&amp;rsquo;s curated content. Example &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;rss version=&amp;#34;2.0&amp;#34; xmlns:rr=&amp;#34;https://reliability.re/rss-ns-spec-1.0/&amp;#34;&amp;gt; &amp;lt;channel&amp;gt; &amp;lt;title&amp;gt;Reliability Report&amp;lt;/title&amp;gt; &amp;lt;link&amp;gt;https://reliability.re&amp;lt;/link&amp;gt; &amp;lt;description&amp;gt;A site about Reliability Engineering&amp;lt;/description&amp;gt; &amp;lt;language&amp;gt;en-us&amp;lt;/language&amp;gt; &amp;lt;lastBuildDate&amp;gt;Fri, 18 Sep 2020 18:46:54 +0000&amp;lt;/lastBuildDate&amp;gt; &amp;lt;item&amp;gt; &amp;lt;title&amp;gt;Debugging Go in prod using eBPF&amp;lt;/title&amp;gt; &amp;lt;link&amp;gt;https://blog.pixielabs.ai/blog/&amp;lt;/link&amp;gt; &amp;lt;pubDate&amp;gt;Fri, 18 Sep 2020 18:46:54 +0000&amp;lt;/pubDate&amp;gt; &amp;lt;author&amp;gt;pabluk@users.noreply.github.com (pabluk)&amp;lt;/author&amp;gt; &amp;lt;guid&amp;gt;2020-09-18-debugging-go-in-prod-using-ebpf&amp;lt;/guid&amp;gt; &amp;lt;description&amp;gt;How to debug Go programs using &amp;amp;lt;b&amp;amp;gt;eBPF&amp;amp;lt;/b&amp;amp;gt;&amp;lt;/description&amp;gt; &amp;lt;rr:github&amp;gt;pabluk&amp;lt;/rr:github&amp;gt; &amp;lt;rr:twitter&amp;gt;pabluk&amp;lt;/rr:twitter&amp;gt; &amp;lt;rr:hashtags&amp;gt;debugging,go,eBPF,linux&amp;lt;/rr:hashtags&amp;gt; &amp;lt;rr:plain&amp;gt;How to debug Go programs using eBPF&amp;lt;/rr:plain&amp;gt; &amp;lt;/item&amp;gt; &amp;lt;/channel&amp;gt; &amp;lt;/rss&amp;gt;</rr:plain></item><item><title>Debugging Go in prod using eBPF</title><link>https://blog.pixielabs.ai/blog/ebpf-function-tracing/post/</link><pubDate>Fri, 18 Sep 2020 18:46:54 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-09-18-debugging-go-in-prod-using-ebpf/</guid><description>&lt;p>This is the first part of a series of articles on how to debug Go programs in binary state using &lt;a href="https://ebpf.io/">eBPF&lt;/a> and it&amp;rsquo;s also a very good introduction to that kernel feature. By the way, I think eBPF will bring a lot of new observability tools, for example the new &lt;a href="https://docs.datadoghq.com/network_performance_monitoring/installation/?tab=agent">Network Performance Monitoring&lt;/a> of Datadog.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This is the first part of a series of articles on how to debug Go programs in binary state using eBPF and it&amp;rsquo;s also a very good introduction to that kernel feature. By the way, I think eBPF will bring a lot of new observability tools, for example the new Network Performance Monitoring of Datadog.</rr:plain></item><item><title>Forbes Cloud 100 list</title><link>https://www.forbes.com/cloud100/#25aca7525f94</link><pubDate>Thu, 17 Sep 2020 08:48:42 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-09-17-forbes-cloud-100-list/</guid><description>&lt;p>Through this list is fun to see a few elements:&lt;/p>
&lt;ul>
&lt;li>only a few companies are not based in the USA (5)&lt;/li>
&lt;li>the number of employees does not seem to impact the value ($) of the company&lt;/li>
&lt;li>2 DevOps company in the top 20&lt;/li>
&lt;/ul></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Through this list is fun to see a few elements:
only a few companies are not based in the USA (5) the number of employees does not seem to impact the value ($) of the company 2 DevOps company in the top 20</rr:plain></item><item><title>Eliminating Toil</title><link>https://landing.google.com/sre/sre-book/chapters/eliminating-toil/</link><pubDate>Wed, 16 Sep 2020 07:07:22 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-09-16-eliminating-toil/</guid><description>&lt;p>This chapter from the &lt;a href="https://landing.google.com/sre/books/">first Site Reliability Engineering book&lt;/a> describes clearly the definition of toil, how to measure it, and it provides some ideas to handle it.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This chapter from the first Site Reliability Engineering book describes clearly the definition of toil, how to measure it, and it provides some ideas to handle it.</rr:plain></item><item><title>Contributing</title><link/><pubDate>Tue, 15 Sep 2020 16:00:15 +0200</pubDate><guid>https://reliability.re/contribute/</guid><description>&lt;p>Thank you for your interest in collaborate to this project üéâ&lt;/p>
&lt;p>As a collaborative project, contributions are welcome and &lt;strong>open to anyone&lt;/strong>,
you just need a &lt;a href="https://github.com/">Github&lt;/a> account and to accept licensing
your contribution under a &lt;a href="https://creativecommons.org/">Creative Commons&lt;/a>
license &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/">BY-SA 4.0&lt;/a>.&lt;/p>
&lt;h2 id="why-contribute">Why contribute?&lt;/h2>
&lt;p>There are lot of reasons to collaborate, here are some of
them:&lt;/p>
&lt;p>ü§ì &lt;strong>Develop your knowledge&lt;/strong>: summarizing information in a condensed and
understandable way is great exercise! It requires to dig deeply in a specific
topic and that will leads you to a better understanding of it.&lt;/p>
&lt;p>üìª &lt;strong>Stay informed&lt;/strong>: spending time finding, filtering, and reading information
across internet keeps you up to date with all the latest news of the
Reliability world.&lt;/p>
&lt;p>ü§ó &lt;strong>Helping others&lt;/strong>: no less important&amp;hellip; &lt;em>sharing is caring&lt;/em>, because
sharing your knowledges with others can help them to find relevant content and
spark new ideas.&lt;/p>
&lt;h2 id="what-kind-of-content-can-i-contribute">What kind of content can I contribute?&lt;/h2>
&lt;p>You can share any content with a public URL like:&lt;/p>
&lt;ul>
&lt;li>Articles&lt;/li>
&lt;li>Software projects&lt;/li>
&lt;li>Presentations (video or slides)&lt;/li>
&lt;li>Training material&lt;/li>
&lt;/ul>
&lt;p>related to any of the following Reliability Engineering topics:&lt;/p>
&lt;ul>
&lt;li>SRE (Site Reliability Engineering)&lt;/li>
&lt;li>Cloud Systems Reliability Engineer&lt;/li>
&lt;li>Database reliability&lt;/li>
&lt;li>DevOps&lt;/li>
&lt;li>Cloud Native&lt;/li>
&lt;/ul>
&lt;p>and please don&amp;rsquo;t hesitate to open an issue or propose a pull request for any
suggestion, idea or fix for this site using a regular Github issue.&lt;/p>
&lt;h2 id="how-to-contribute">How to contribute&lt;/h2>
&lt;p>In order to start contributing you just need a &lt;a href="https://github.com/">Github&lt;/a>
account to open &lt;a href="https://github.com/sre-paris/reliability.re/issues/new?labels=content&amp;amp;template=new-content.md&amp;amp;title=Content%27s+title">an issue using this template&lt;/a>.&lt;/p>
&lt;p>Every new issue will automatically generate a pull request using &lt;a href="https://github.com/sre-paris/reliability.re/actions">Github
Actions&lt;/a> that will be reviewed and merged
by a maintainer. A few minutes later your content will be published.&lt;/p></description><rr:plain>Thank you for your interest in collaborate to this project üéâ
As a collaborative project, contributions are welcome and open to anyone, you just need a Github account and to accept licensing your contribution under a Creative Commons license BY-SA 4.0.
Why contribute? There are lot of reasons to collaborate, here are some of them:
ü§ì Develop your knowledge: summarizing information in a condensed and understandable way is great exercise! It requires to dig deeply in a specific topic and that will leads you to a better understanding of it.
üìª Stay informed: spending time finding, filtering, and reading information across internet keeps you up to date with all the latest news of the Reliability world.
ü§ó Helping others: no less important&amp;hellip; sharing is caring, because sharing your knowledges with others can help them to find relevant content and spark new ideas.
What kind of content can I contribute? You can share any content with a public URL like:
Articles Software projects Presentations (video or slides) Training material related to any of the following Reliability Engineering topics:
SRE (Site Reliability Engineering) Cloud Systems Reliability Engineer Database reliability DevOps Cloud Native and please don&amp;rsquo;t hesitate to open an issue or propose a pull request for any suggestion, idea or fix for this site using a regular Github issue.
How to contribute In order to start contributing you just need a Github account to open an issue using this template.
Every new issue will automatically generate a pull request using Github Actions that will be reviewed and merged by a maintainer. A few minutes later your content will be published.</rr:plain></item><item><title>Why Is Site Reliability Engineering Important</title><link>https://devops.com/why-is-site-reliability-engineering-important/</link><pubDate>Mon, 13 Jul 2020 20:58:19 +0200</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/why-is-site-reliability-engineering-important/</guid><description>&lt;p>This is a quote from the &lt;a href="https://landing.google.com/sre/sre-book/toc/index.html">SRE book&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Site reliability engineering (SRE) is one of the fastest-growing enterprise roles and set of operational practices for managing services at scale.&lt;/p>
&lt;/blockquote>
&lt;p>You&amp;rsquo;ll find a clear introduction of these principles &lt;a href="https://landing.google.com/sre/sre-book/chapters/introduction">here&lt;/a>.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This is a quote from the SRE book:
Site reliability engineering (SRE) is one of the fastest-growing enterprise roles and set of operational practices for managing services at scale.
You&amp;rsquo;ll find a clear introduction of these principles here.</rr:plain></item></channel></rss>