<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:rr="https://reliability.re/rss-ns-spec-1.0/" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule"><channel><title>Reliability Report üì∞</title><link>https://reliability.re/</link><description>A collaborative curated content site about Reliability Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><creativeCommons:license>https://creativecommons.org/licenses/by-sa/4.0/</creativeCommons:license><lastBuildDate>Wed, 04 Nov 2020 20:48:25 +0000</lastBuildDate><atom:link href="https://reliability.re/links/index.xml" rel="self" type="application/rss+xml"/><item><title>SLO ‚Äî From Nothing to‚Ä¶ Production</title><link>https://geototti21.medium.com/slo-from-nothing-to-production-91b8d4270bd5</link><pubDate>Wed, 04 Nov 2020 20:48:25 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-11-04-slo-from-nothing-to-production/</guid><description>&lt;p>If you don‚Äôt know how to start introducing SLOs at work, this a great example from Ioannis (@geototti21) and his journey to bring SLOs into his organization with a clear path and framework. As he said ‚ÄúExplain how SLOs can be an important internal tracking target that is tougher than your SLA. Also, mention how we can use the SLOs to offer better SLAs than ‚Äúservice uptime‚Äù if we are asked‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SLOs,#SRE</rr:hashtags><rr:plain>If you don‚Äôt know how to start introducing SLOs at work, this a great example from Ioannis (@geototti21) and his journey to bring SLOs into his organization with a clear path and framework. As he said ‚ÄúExplain how SLOs can be an important internal tracking target that is tougher than your SLA. Also, mention how we can use the SLOs to offer better SLAs than ‚Äúservice uptime‚Äù if we are asked‚Äù</rr:plain></item><item><title>Why is 100% reliability the wrong target?</title><link>https://landing.google.com/sre/workbook/chapters/implementing-slos/#reliability-targets-and-error-budgets</link><pubDate>Tue, 27 Oct 2020 22:33:56 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-27-why-is-100-reliability-the-wrong-target/</guid><description>&lt;p>If you want to know why 100% reliability is the wrong target go to &lt;a href="https://landing.google.com/sre/workbook/chapters/implementing-slos/#reliability-targets-and-error-budgets">Chapter 2 of the SRE Workbook&lt;/a>, you&amp;rsquo;ll find ‚Äú‚Ä¶ as you go from 99% to 99.9% to 99.99% reliability, each extra nine comes at an increased cost, but the marginal utility to your customers steadily approaches zero‚Äù between other good reasons&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>If you want to know why 100% reliability is the wrong target go to Chapter 2 of the SRE Workbook, you&amp;rsquo;ll find ‚Äú‚Ä¶ as you go from 99% to 99.9% to 99.99% reliability, each extra nine comes at an increased cost, but the marginal utility to your customers steadily approaches zero‚Äù between other good reasons</rr:plain></item><item><title>The Production Readiness Spectrum</title><link>https://dastergon.gr/posts/2020/09/the-production-readiness-spectrum/</link><pubDate>Sat, 24 Oct 2020 01:00:36 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-24-the-production-readiness-spectrum/</guid><description>&lt;p>If you&amp;rsquo;re looking to adopt Production Readiness reviews, this is an insightful post from Pavlos blog (@dastergon), on it, he summarizes several aspects of Production Readiness reviews, like the spectrum from 1-sided to full automated reviews or examples of Production Readiness checklists from several companies, as well as what can the reviews bring to an organization: ‚ÄúProduction Readiness Reviews are a powerful tool that enables us to provide a common language for our production standards across the organization. It increases our confidence throughout the whole lifecycle of a service and builds trust between product development and SRE teams‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>If you&amp;rsquo;re looking to adopt Production Readiness reviews, this is an insightful post from Pavlos blog (@dastergon), on it, he summarizes several aspects of Production Readiness reviews, like the spectrum from 1-sided to full automated reviews or examples of Production Readiness checklists from several companies, as well as what can the reviews bring to an organization: ‚ÄúProduction Readiness Reviews are a powerful tool that enables us to provide a common language for our production standards across the organization. It increases our confidence throughout the whole lifecycle of a service and builds trust between product development and SRE teams‚Äù</rr:plain></item><item><title>how they test ?</title><link>https://abhivaikar.github.io/howtheytest</link><pubDate>Fri, 09 Oct 2020 13:57:41 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-10-09-how-they-test-/</guid><description>&lt;p>Testing a software is like &lt;em>good practices&lt;/em>: everyone has its own interpretation. It&amp;rsquo;s something really interesting to see &lt;strong>how&lt;/strong> other companies test their software and &lt;strong>which tools&lt;/strong> they use, in order to define your own test strategy fitting your own use-cases.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Testing a software is like good practices: everyone has its own interpretation. It&amp;rsquo;s something really interesting to see how other companies test their software and which tools they use, in order to define your own test strategy fitting your own use-cases.</rr:plain></item><item><title>Observability 101: Terminology and Concepts</title><link>https://www.honeycomb.io/blog/observability-101-terminology-and-concepts/</link><pubDate>Fri, 09 Oct 2020 06:51:43 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-09-observability-101-terminology-and-concepts/</guid><description>&lt;p>This succinct article from the &lt;a href="https://www.honeycomb.io/blog/">Honeycomb blog&lt;/a> is a great starting point to understand the fundamentals of Observability, like metrics, logs, traces and structured events, as well as the concepts of context, dimensionality and cardinality. It also includes additional links for further reading about #o11y and distributed tracing.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This succinct article from the Honeycomb blog is a great starting point to understand the fundamentals of Observability, like metrics, logs, traces and structured events, as well as the concepts of context, dimensionality and cardinality. It also includes additional links for further reading about #o11y and distributed tracing.</rr:plain></item><item><title>Chaos Engineering: The Path to Reliability</title><link>https://www.chaosconf.io/</link><pubDate>Tue, 06 Oct 2020 19:04:54 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-06-chaos-engineering-the-path-to-reliability/</guid><description>&lt;p>This was an very interesting talk, providing a great introduction to Chaos Engineering concepts, good advice with Do&amp;rsquo;s and Don&amp;rsquo;ts and a clear path to reliability (Scan, Baseline, Analyze &amp;amp; Plan, Harden and Report) by Kolton Andrus from &lt;a href="https://www.gremlin.com/">Gremlin, Inc&lt;/a>. Don&amp;rsquo;t hesitate to register to the #ChaosConf there are still 2 days full of interesting topics to come!&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This was an very interesting talk, providing a great introduction to Chaos Engineering concepts, good advice with Do&amp;rsquo;s and Don&amp;rsquo;ts and a clear path to reliability (Scan, Baseline, Analyze &amp;amp; Plan, Harden and Report) by Kolton Andrus from Gremlin, Inc. Don&amp;rsquo;t hesitate to register to the #ChaosConf there are still 2 days full of interesting topics to come!</rr:plain></item><item><title>Under Deconstruction: The State of Shopify‚Äôs Monolith</title><link>https://engineering.shopify.com/blogs/engineering/shopify-monolith</link><pubDate>Fri, 02 Oct 2020 08:00:06 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-10-02-under-deconstruction-the-state-of-shopifys-monolith/</guid><description>&lt;p>Another feedback on RoR application migration @ Shopify with a long paper explaining the different steps / challenges (showing a few hints / IRL examples).&lt;/p>
&lt;p>It&amp;rsquo;s an interesting reading, since the question of Monolith vs modular applications is not &lt;em>easy&lt;/em> to answer and there is &lt;strong>no generic&lt;/strong> method to &lt;em>solve&lt;/em> it.&lt;/p>
&lt;blockquote>
&lt;p>So, we developed a new tool called Packwerk to analyze static constant references. [&amp;hellip;] We‚Äôre planning to make Packwerk open source soon. Stay tuned!&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;m definitely looking for to see how they proceed and why not try to make it language agnostic.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Another feedback on RoR application migration @ Shopify with a long paper explaining the different steps / challenges (showing a few hints / IRL examples).
It&amp;rsquo;s an interesting reading, since the question of Monolith vs modular applications is not easy to answer and there is no generic method to solve it.
So, we developed a new tool called Packwerk to analyze static constant references. [&amp;hellip;] We‚Äôre planning to make Packwerk open source soon. Stay tuned!
I&amp;rsquo;m definitely looking for to see how they proceed and why not try to make it language agnostic.</rr:plain></item><item><title>Debugging Go in prod using eBPF</title><link>https://blog.pixielabs.ai/blog/ebpf-function-tracing/post/</link><pubDate>Fri, 18 Sep 2020 18:46:54 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-09-18-debugging-go-in-prod-using-ebpf/</guid><description>&lt;p>This is the first part of a series of articles on how to debug Go programs in binary state using &lt;a href="https://ebpf.io/">eBPF&lt;/a> and it&amp;rsquo;s also a very good introduction to that kernel feature. By the way, I think eBPF will bring a lot of new observability tools, for example the new &lt;a href="https://docs.datadoghq.com/network_performance_monitoring/installation/?tab=agent">Network Performance Monitoring&lt;/a> of Datadog.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This is the first part of a series of articles on how to debug Go programs in binary state using eBPF and it&amp;rsquo;s also a very good introduction to that kernel feature. By the way, I think eBPF will bring a lot of new observability tools, for example the new Network Performance Monitoring of Datadog.</rr:plain></item><item><title>Forbes Cloud 100 list</title><link>https://www.forbes.com/cloud100/#25aca7525f94</link><pubDate>Thu, 17 Sep 2020 08:48:42 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-09-17-forbes-cloud-100-list/</guid><description>&lt;p>Through this list is fun to see a few elements:&lt;/p>
&lt;ul>
&lt;li>only a few companies are not based in the USA (5)&lt;/li>
&lt;li>the number of employees does not seem to impact the value ($) of the company&lt;/li>
&lt;li>2 DevOps company in the top 20&lt;/li>
&lt;/ul></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Through this list is fun to see a few elements:
only a few companies are not based in the USA (5) the number of employees does not seem to impact the value ($) of the company 2 DevOps company in the top 20</rr:plain></item><item><title>Eliminating Toil</title><link>https://landing.google.com/sre/sre-book/chapters/eliminating-toil/</link><pubDate>Wed, 16 Sep 2020 07:07:22 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-09-16-eliminating-toil/</guid><description>&lt;p>This chapter from the &lt;a href="https://landing.google.com/sre/books/">first Site Reliability Engineering book&lt;/a> describes clearly the definition of toil, how to measure it, and it provides some ideas to handle it.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This chapter from the first Site Reliability Engineering book describes clearly the definition of toil, how to measure it, and it provides some ideas to handle it.</rr:plain></item><item><title>Why Is Site Reliability Engineering Important</title><link>https://devops.com/why-is-site-reliability-engineering-important/</link><pubDate>Mon, 13 Jul 2020 20:58:19 +0200</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/why-is-site-reliability-engineering-important/</guid><description>&lt;p>This is a quote from the &lt;a href="https://landing.google.com/sre/sre-book/toc/index.html">SRE book&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Site reliability engineering (SRE) is one of the fastest-growing enterprise roles and set of operational practices for managing services at scale.&lt;/p>
&lt;/blockquote>
&lt;p>You&amp;rsquo;ll find a clear introduction of these principles &lt;a href="https://landing.google.com/sre/sre-book/chapters/introduction">here&lt;/a>.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This is a quote from the SRE book:
Site reliability engineering (SRE) is one of the fastest-growing enterprise roles and set of operational practices for managing services at scale.
You&amp;rsquo;ll find a clear introduction of these principles here.</rr:plain></item></channel></rss>