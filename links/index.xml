<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:rr="https://reliability.re/rss-ns-spec-1.0/" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule"><channel><title>Reliability Report üì∞</title><link>https://reliability.re/</link><description>A collaborative curated content site about Reliability Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><creativeCommons:license>https://creativecommons.org/licenses/by-sa/4.0/</creativeCommons:license><lastBuildDate>Thu, 22 Apr 2021 07:54:49 +0000</lastBuildDate><atom:link href="https://reliability.re/links/index.xml" rel="self" type="application/rss+xml"/><item><title>Upcoming SRE and Chaos Engineering sessions at contributing.today</title><link>https://www.contributing.today/</link><pubDate>Thu, 22 Apr 2021 07:54:49 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2021-04-22-upcoming-sre-and-chaos-engineering-sessions-at-contributing.today/</guid><description>&lt;p>Don&amp;rsquo;t forget to join the virtual meetups of contributing.today for 2 interesting shows! today, 21 April 2021, about Site Reliability Engineering with a great panel of SREs and another one the next week about Chaos Engineering with @QuintessenceAnx from PagerDuty!&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SRE,#contributingtoday</rr:hashtags><rr:plain>Don&amp;rsquo;t forget to join the virtual meetups of contributing.today for 2 interesting shows! today, 21 April 2021, about Site Reliability Engineering with a great panel of SREs and another one the next week about Chaos Engineering with @QuintessenceAnx from PagerDuty!</rr:plain></item><item><title>PromCon Online 2021</title><link>https://promcon.io/2021-online/schedule/</link><pubDate>Mon, 29 Mar 2021 09:10:21 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2021-03-29-promcon-online-2021/</guid><description>&lt;p>@PromConIO schedule is available! The 3rd of May and online. Which talks do you want to attend? :)&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:hashtags>#prometheus,#monitoring</rr:hashtags><rr:plain>@PromConIO schedule is available! The 3rd of May and online. Which talks do you want to attend? :)</rr:plain></item><item><title>Everything is broken, and it‚Äôs okay</title><link>https://increment.com/reliability/failure-is-okay/</link><pubDate>Tue, 09 Mar 2021 10:25:11 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2021-03-09-everything-is-broken-and-its-okay/</guid><description>&lt;p>Insightful article by @wiredferret for the latest issue of @incrementmag on how to change our mindset to accept failure in order to build resilient systems following risk reduction and harm mitigation patterns.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#reliability</rr:hashtags><rr:plain>Insightful article by @wiredferret for the latest issue of @incrementmag on how to change our mindset to accept failure in order to build resilient systems following risk reduction and harm mitigation patterns.</rr:plain></item><item><title>v5.12-rc1-dontuse</title><link>https://arstechnica.com/gadgets/2021/03/psa-linux-folks-stay-away-from-the-5-12-rc1-kernel/</link><pubDate>Mon, 08 Mar 2021 09:42:43 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2021-03-08-v5.12-rc1-dontuse/</guid><description>&lt;p>Funny story about this release candidate of Linux 5.12.&lt;/p>
&lt;p>TL;DR:&lt;/p>
&lt;blockquote>
&lt;p>[&amp;hellip;] swap files stopped working right.&lt;/p>
&lt;/blockquote></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:hashtags>#linux</rr:hashtags><rr:plain>Funny story about this release candidate of Linux 5.12.
TL;DR:
[&amp;hellip;] swap files stopped working right.</rr:plain></item><item><title>Google Kubernetes Engine on autopilot mode</title><link>https://techcrunch.com/2021/02/24/google-cloud-puts-its-kubernetes-engine-on-autopilot</link><pubDate>Wed, 24 Feb 2021 20:15:35 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2021-02-24-google-kubernetes-engine-on-autopilot-mode/</guid><description>&lt;p>Using GKE autopilot mode, you will have less to manage and more to play!&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Using GKE autopilot mode, you will have less to manage and more to play!</rr:plain></item><item><title>GCP and AWS: a deep comparison</title><link>https://kinsta.com/blog/google-cloud-vs-aws/</link><pubDate>Fri, 29 Jan 2021 09:32:53 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2021-01-29-gcp-and-aws-a-deep-comparison/</guid><description>&lt;p>In this long and complete paper, you&amp;rsquo;ll get some elements to help you choosing a cloud platform in your infrastructure design process.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:hashtags>#aws,#gcp,#cloud</rr:hashtags><rr:plain>In this long and complete paper, you&amp;rsquo;ll get some elements to help you choosing a cloud platform in your infrastructure design process.</rr:plain></item><item><title>Use containers to package your software</title><link>https://luet-lab.github.io/docs/about/</link><pubDate>Tue, 19 Jan 2021 09:28:52 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2021-01-19-use-containers-to-package-your-software/</guid><description>&lt;p>With the recent &lt;a href="https://news.itsfoss.com/mocaccinoos-announcement/">announcement&lt;/a> of Sabayon Linux becoming Mocaccino OS, we know that &lt;a href="https://luet-lab.github.io/docs/about/">Luet&lt;/a> will be used as package manager. This package manage sounds promising, with the ability to define your build / runtime dependencies on top of a container layer.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:hashtags>#oss</rr:hashtags><rr:plain>With the recent announcement of Sabayon Linux becoming Mocaccino OS, we know that Luet will be used as package manager. This package manage sounds promising, with the ability to define your build / runtime dependencies on top of a container layer.</rr:plain></item><item><title>SREcon20 Americas talks</title><link>https://www.youtube.com/watch?v=2C2F5USR6N4&amp;list=PLbRoZ5Rrl5lfLXUjFjS0mP1XzNzNZMhYN</link><pubDate>Wed, 23 Dec 2020 21:25:41 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-12-23-srecon20-americas-talks/</guid><description>&lt;p>Yay! SREcon20 Americas talks are ready and available on Youtube üéâ For more details on each talk see the program here &lt;a href="https://www.usenix.org/conference/srecon20americas/program">https://www.usenix.org/conference/srecon20americas/program&lt;/a> enjoy üçø thanks @SREcon and @usenix&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SREcon20</rr:hashtags><rr:plain>Yay! SREcon20 Americas talks are ready and available on Youtube üéâ For more details on each talk see the program here https://www.usenix.org/conference/srecon20americas/program enjoy üçø thanks @SREcon and @usenix</rr:plain></item><item><title>Interrupt Reduction Projects</title><link>https://www.usenix.org/system/files/login/articles/login_winter16_11_beyer.pdf</link><pubDate>Tue, 22 Dec 2020 07:19:51 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-12-22-interrupt-reduction-projects/</guid><description>&lt;p>‚Äúassigning a primary on-call to handle pager duty, while round-robin assigning tickets across the team. This setup frequently led to undesirable outcomes, as engineers couldn‚Äôt successfully under-take project work and ticket duty simultaneously‚Äù If that looks like your team and you&amp;rsquo;re looking for ideas to manage toil this article from @usenix &lt;strong>;login:&lt;/strong> magazine and shared on the @googlesre resources page &lt;a href="https://sre.google/resources/">https://sre.google/resources/&lt;/a> could help you to identify interruptions and find out an adapted strategy for your team.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SRE,#toil</rr:hashtags><rr:plain>‚Äúassigning a primary on-call to handle pager duty, while round-robin assigning tickets across the team. This setup frequently led to undesirable outcomes, as engineers couldn‚Äôt successfully under-take project work and ticket duty simultaneously‚Äù If that looks like your team and you&amp;rsquo;re looking for ideas to manage toil this article from @usenix ;login: magazine and shared on the @googlesre resources page https://sre.google/resources/ could help you to identify interruptions and find out an adapted strategy for your team.</rr:plain></item><item><title>Identifying Your SRE Training Needs</title><link>https://sre.google/resources/practices-and-processes/training-site-reliability-engineers/</link><pubDate>Sat, 05 Dec 2020 16:41:22 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-12-05-identifying-your-sre-training-needs/</guid><description>&lt;p>The best thing to create and facilitate the adoption of an SRE culture in your organization is to have an optimum training plan adapted to its size, maturity and people experience. Take a look inside chapter 1 of this @googlesre book as a good starting point to find a matrix describing different use cases for organizations of any size, and in chapter 3 you&amp;rsquo;ll find case studies for small and large organizations that can inspire new ideas for your team!&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SRE</rr:hashtags><rr:plain>The best thing to create and facilitate the adoption of an SRE culture in your organization is to have an optimum training plan adapted to its size, maturity and people experience. Take a look inside chapter 1 of this @googlesre book as a good starting point to find a matrix describing different use cases for organizations of any size, and in chapter 3 you&amp;rsquo;ll find case studies for small and large organizations that can inspire new ideas for your team!</rr:plain></item><item><title>A guide to the reliability talks at AWS re:Invent</title><link>https://www.gremlin.com/blog/a-guide-to-the-reliability-talks-at-aws-re-invent/</link><pubDate>Wed, 02 Dec 2020 17:18:10 +0000</pubDate><author>GeraldC13@users.noreply.github.com (GeraldC13)</author><guid>https://reliability.re/links/2020-12-02-a-guide-to-the-reliability-talks-at-aws-reinvent/</guid><description>&lt;p>Top picks of &lt;strong>reliability-focused talks&lt;/strong> on AWS re:Invent (virtual) from @Ana_M_Medina a Sr Chaos Eng. at @GremlinInc&lt;/p></description><rr:github>GeraldC13</rr:github><rr:twitter>GeraldCrescione</rr:twitter><rr:hashtags>#AWS, #SRE</rr:hashtags><rr:plain>Top picks of reliability-focused talks on AWS re:Invent (virtual) from @Ana_M_Medina a Sr Chaos Eng. at @GremlinInc</rr:plain></item><item><title>Why you should take care of infrastructure drift</title><link>https://driftctl.com/2020/11/24/infrastructure-drift</link><pubDate>Fri, 27 Nov 2020 16:45:02 +0000</pubDate><author>GeraldC13@users.noreply.github.com (GeraldC13)</author><guid>https://reliability.re/links/2020-11-27-why-you-should-take-care-of-infrastructure-drift/</guid><description>&lt;p>&lt;em>This article is the first outcome of a call for participation to a study on infrastructure drift we launched at the last Paris SRE Meetup. As part of our work on ‚Äòdrittctl‚Äô we are writing a report on how infrastructure drift can be a challenge for DevOps teams, and how they address it. The goal is to share with the community core problems and best practices.
Here is a foretaste of this study, outlining some of the key facts we recorded.&lt;/em>&lt;/p>
&lt;p>When talking about infrastructure drift, you often get knowing glances and heated answers. Recording gaps in your infra between what you expected to be and the reality of what is, is a well known and wide spread issue bothering hundreds of teams around the globe. Facing impacts and consequences ranging from intensive toil to dangerous security threats, many team are keenly aware of the issue and actively looking for solutions.&lt;/p>
&lt;p>We decided to look more closely into how they deal with it and conducted a study that will be released in the coming weeks.&lt;/p></description><rr:github>GeraldC13</rr:github><rr:twitter>GeraldCrescione</rr:twitter><rr:hashtags>#DevOps,#SRE</rr:hashtags><rr:plain>This article is the first outcome of a call for participation to a study on infrastructure drift we launched at the last Paris SRE Meetup. As part of our work on ‚Äòdrittctl‚Äô we are writing a report on how infrastructure drift can be a challenge for DevOps teams, and how they address it. The goal is to share with the community core problems and best practices. Here is a foretaste of this study, outlining some of the key facts we recorded.
When talking about infrastructure drift, you often get knowing glances and heated answers. Recording gaps in your infra between what you expected to be and the reality of what is, is a well known and wide spread issue bothering hundreds of teams around the globe. Facing impacts and consequences ranging from intensive toil to dangerous security threats, many team are keenly aware of the issue and actively looking for solutions.
We decided to look more closely into how they deal with it and conducted a study that will be released in the coming weeks.</rr:plain></item><item><title>Introducing Non-Abstract Large System Design</title><link>https://landing.google.com/sre/workbook/chapters/non-abstract-design/</link><pubDate>Sun, 22 Nov 2020 17:36:25 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-11-22-introducing-non-abstract-large-system-design/</guid><description>&lt;p>Non-Abstract Large System Design (NALSD) a very useful and critical skill for SREs: ‚ÄúBy breaking down software into logical components and placing these components into a production ecosystem with reliable infrastructure, we arrive at systems that provide reasonable and appropriate targets for data consistency, system availability, and resource efficiency.‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SRE,#NALSD</rr:hashtags><rr:plain>Non-Abstract Large System Design (NALSD) a very useful and critical skill for SREs: ‚ÄúBy breaking down software into logical components and placing these components into a production ecosystem with reliable infrastructure, we arrive at systems that provide reasonable and appropriate targets for data consistency, system availability, and resource efficiency.‚Äù</rr:plain></item><item><title>All Day DevOps 2020</title><link>https://www.alldaydevops.com/2020-fallschedule</link><pubDate>Wed, 11 Nov 2020 18:50:20 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-11-11-all-day-devops-2020/</guid><description>&lt;p>Hey, in case you missed it, tomorrow (Nov 12) starts the 2020 Fall edition of the @AllDayDevOps conference, with talks during 24 hours by 180 speakers around the world, the event is held entirely online and the registration is free. Take a look at the schedule&amp;hellip; there&amp;rsquo;s even a dedicated SRE track!&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#addo,#sre,#devops</rr:hashtags><rr:plain>Hey, in case you missed it, tomorrow (Nov 12) starts the 2020 Fall edition of the @AllDayDevOps conference, with talks during 24 hours by 180 speakers around the world, the event is held entirely online and the registration is free. Take a look at the schedule&amp;hellip; there&amp;rsquo;s even a dedicated SRE track!</rr:plain></item><item><title>SLO ‚Äî From Nothing to‚Ä¶ Production</title><link>https://geototti21.medium.com/slo-from-nothing-to-production-91b8d4270bd5</link><pubDate>Wed, 04 Nov 2020 20:48:25 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-11-04-slo-from-nothing-to-production/</guid><description>&lt;p>If you don‚Äôt know how to start introducing SLOs at work, this a great example from Ioannis (@geototti21) and his journey to bring SLOs into his organization with a clear path and framework. As he said ‚ÄúExplain how SLOs can be an important internal tracking target that is tougher than your SLA. Also, mention how we can use the SLOs to offer better SLAs than ‚Äúservice uptime‚Äù if we are asked‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:hashtags>#SLOs,#SRE</rr:hashtags><rr:plain>If you don‚Äôt know how to start introducing SLOs at work, this a great example from Ioannis (@geototti21) and his journey to bring SLOs into his organization with a clear path and framework. As he said ‚ÄúExplain how SLOs can be an important internal tracking target that is tougher than your SLA. Also, mention how we can use the SLOs to offer better SLAs than ‚Äúservice uptime‚Äù if we are asked‚Äù</rr:plain></item><item><title>Why is 100% reliability the wrong target?</title><link>https://landing.google.com/sre/workbook/chapters/implementing-slos/#reliability-targets-and-error-budgets</link><pubDate>Tue, 27 Oct 2020 22:33:56 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-27-why-is-100-reliability-the-wrong-target/</guid><description>&lt;p>If you want to know why 100% reliability is the wrong target go to &lt;a href="https://landing.google.com/sre/workbook/chapters/implementing-slos/#reliability-targets-and-error-budgets">Chapter 2 of the SRE Workbook&lt;/a>, you&amp;rsquo;ll find ‚Äú‚Ä¶ as you go from 99% to 99.9% to 99.99% reliability, each extra nine comes at an increased cost, but the marginal utility to your customers steadily approaches zero‚Äù between other good reasons&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>If you want to know why 100% reliability is the wrong target go to Chapter 2 of the SRE Workbook, you&amp;rsquo;ll find ‚Äú‚Ä¶ as you go from 99% to 99.9% to 99.99% reliability, each extra nine comes at an increased cost, but the marginal utility to your customers steadily approaches zero‚Äù between other good reasons</rr:plain></item><item><title>The Production Readiness Spectrum</title><link>https://dastergon.gr/posts/2020/09/the-production-readiness-spectrum/</link><pubDate>Sat, 24 Oct 2020 01:00:36 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-24-the-production-readiness-spectrum/</guid><description>&lt;p>If you&amp;rsquo;re looking to adopt Production Readiness reviews, this is an insightful post from Pavlos blog (@dastergon), on it, he summarizes several aspects of Production Readiness reviews, like the spectrum from 1-sided to full automated reviews or examples of Production Readiness checklists from several companies, as well as what can the reviews bring to an organization: ‚ÄúProduction Readiness Reviews are a powerful tool that enables us to provide a common language for our production standards across the organization. It increases our confidence throughout the whole lifecycle of a service and builds trust between product development and SRE teams‚Äù&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>If you&amp;rsquo;re looking to adopt Production Readiness reviews, this is an insightful post from Pavlos blog (@dastergon), on it, he summarizes several aspects of Production Readiness reviews, like the spectrum from 1-sided to full automated reviews or examples of Production Readiness checklists from several companies, as well as what can the reviews bring to an organization: ‚ÄúProduction Readiness Reviews are a powerful tool that enables us to provide a common language for our production standards across the organization. It increases our confidence throughout the whole lifecycle of a service and builds trust between product development and SRE teams‚Äù</rr:plain></item><item><title>how they test ?</title><link>https://abhivaikar.github.io/howtheytest</link><pubDate>Fri, 09 Oct 2020 13:57:41 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-10-09-how-they-test-/</guid><description>&lt;p>Testing a software is like &lt;em>good practices&lt;/em>: everyone has its own interpretation. It&amp;rsquo;s something really interesting to see &lt;strong>how&lt;/strong> other companies test their software and &lt;strong>which tools&lt;/strong> they use, in order to define your own test strategy fitting your own use-cases.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Testing a software is like good practices: everyone has its own interpretation. It&amp;rsquo;s something really interesting to see how other companies test their software and which tools they use, in order to define your own test strategy fitting your own use-cases.</rr:plain></item><item><title>Observability 101: Terminology and Concepts</title><link>https://www.honeycomb.io/blog/observability-101-terminology-and-concepts/</link><pubDate>Fri, 09 Oct 2020 06:51:43 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-09-observability-101-terminology-and-concepts/</guid><description>&lt;p>This succinct article from the &lt;a href="https://www.honeycomb.io/blog/">Honeycomb blog&lt;/a> is a great starting point to understand the fundamentals of Observability, like metrics, logs, traces and structured events, as well as the concepts of context, dimensionality and cardinality. It also includes additional links for further reading about #o11y and distributed tracing.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This succinct article from the Honeycomb blog is a great starting point to understand the fundamentals of Observability, like metrics, logs, traces and structured events, as well as the concepts of context, dimensionality and cardinality. It also includes additional links for further reading about #o11y and distributed tracing.</rr:plain></item><item><title>Chaos Engineering: The Path to Reliability</title><link>https://www.chaosconf.io/</link><pubDate>Tue, 06 Oct 2020 19:04:54 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-10-06-chaos-engineering-the-path-to-reliability/</guid><description>&lt;p>This was an very interesting talk, providing a great introduction to Chaos Engineering concepts, good advice with Do&amp;rsquo;s and Don&amp;rsquo;ts and a clear path to reliability (Scan, Baseline, Analyze &amp;amp; Plan, Harden and Report) by Kolton Andrus from &lt;a href="https://www.gremlin.com/">Gremlin, Inc&lt;/a>. Don&amp;rsquo;t hesitate to register to the #ChaosConf there are still 2 days full of interesting topics to come!&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This was an very interesting talk, providing a great introduction to Chaos Engineering concepts, good advice with Do&amp;rsquo;s and Don&amp;rsquo;ts and a clear path to reliability (Scan, Baseline, Analyze &amp;amp; Plan, Harden and Report) by Kolton Andrus from Gremlin, Inc. Don&amp;rsquo;t hesitate to register to the #ChaosConf there are still 2 days full of interesting topics to come!</rr:plain></item><item><title>Under Deconstruction: The State of Shopify‚Äôs Monolith</title><link>https://engineering.shopify.com/blogs/engineering/shopify-monolith</link><pubDate>Fri, 02 Oct 2020 08:00:06 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-10-02-under-deconstruction-the-state-of-shopifys-monolith/</guid><description>&lt;p>Another feedback on RoR application migration @ Shopify with a long paper explaining the different steps / challenges (showing a few hints / IRL examples).&lt;/p>
&lt;p>It&amp;rsquo;s an interesting reading, since the question of Monolith vs modular applications is not &lt;em>easy&lt;/em> to answer and there is &lt;strong>no generic&lt;/strong> method to &lt;em>solve&lt;/em> it.&lt;/p>
&lt;blockquote>
&lt;p>So, we developed a new tool called Packwerk to analyze static constant references. [&amp;hellip;] We‚Äôre planning to make Packwerk open source soon. Stay tuned!&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;m definitely looking for to see how they proceed and why not try to make it language agnostic.&lt;/p></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Another feedback on RoR application migration @ Shopify with a long paper explaining the different steps / challenges (showing a few hints / IRL examples).
It&amp;rsquo;s an interesting reading, since the question of Monolith vs modular applications is not easy to answer and there is no generic method to solve it.
So, we developed a new tool called Packwerk to analyze static constant references. [&amp;hellip;] We‚Äôre planning to make Packwerk open source soon. Stay tuned!
I&amp;rsquo;m definitely looking for to see how they proceed and why not try to make it language agnostic.</rr:plain></item><item><title>Debugging Go in prod using eBPF</title><link>https://blog.pixielabs.ai/blog/ebpf-function-tracing/post/</link><pubDate>Fri, 18 Sep 2020 18:46:54 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-09-18-debugging-go-in-prod-using-ebpf/</guid><description>&lt;p>This is the first part of a series of articles on how to debug Go programs in binary state using &lt;a href="https://ebpf.io/">eBPF&lt;/a> and it&amp;rsquo;s also a very good introduction to that kernel feature. By the way, I think eBPF will bring a lot of new observability tools, for example the new &lt;a href="https://docs.datadoghq.com/network_performance_monitoring/installation/?tab=agent">Network Performance Monitoring&lt;/a> of Datadog.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This is the first part of a series of articles on how to debug Go programs in binary state using eBPF and it&amp;rsquo;s also a very good introduction to that kernel feature. By the way, I think eBPF will bring a lot of new observability tools, for example the new Network Performance Monitoring of Datadog.</rr:plain></item><item><title>Forbes Cloud 100 list</title><link>https://www.forbes.com/cloud100/#25aca7525f94</link><pubDate>Thu, 17 Sep 2020 08:48:42 +0000</pubDate><author>tormath1@users.noreply.github.com (tormath1)</author><guid>https://reliability.re/links/2020-09-17-forbes-cloud-100-list/</guid><description>&lt;p>Through this list is fun to see a few elements:&lt;/p>
&lt;ul>
&lt;li>only a few companies are not based in the USA (5)&lt;/li>
&lt;li>the number of employees does not seem to impact the value ($) of the company&lt;/li>
&lt;li>2 DevOps company in the top 20&lt;/li>
&lt;/ul></description><rr:github>tormath1</rr:github><rr:twitter>tormath1</rr:twitter><rr:plain>Through this list is fun to see a few elements:
only a few companies are not based in the USA (5) the number of employees does not seem to impact the value ($) of the company 2 DevOps company in the top 20</rr:plain></item><item><title>Eliminating Toil</title><link>https://landing.google.com/sre/sre-book/chapters/eliminating-toil/</link><pubDate>Wed, 16 Sep 2020 07:07:22 +0000</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/2020-09-16-eliminating-toil/</guid><description>&lt;p>This chapter from the &lt;a href="https://landing.google.com/sre/books/">first Site Reliability Engineering book&lt;/a> describes clearly the definition of toil, how to measure it, and it provides some ideas to handle it.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This chapter from the first Site Reliability Engineering book describes clearly the definition of toil, how to measure it, and it provides some ideas to handle it.</rr:plain></item><item><title>Why Is Site Reliability Engineering Important</title><link>https://devops.com/why-is-site-reliability-engineering-important/</link><pubDate>Mon, 13 Jul 2020 20:58:19 +0200</pubDate><author>pabluk@users.noreply.github.com (pabluk)</author><guid>https://reliability.re/links/why-is-site-reliability-engineering-important/</guid><description>&lt;p>This is a quote from the &lt;a href="https://landing.google.com/sre/sre-book/toc/index.html">SRE book&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Site reliability engineering (SRE) is one of the fastest-growing enterprise roles and set of operational practices for managing services at scale.&lt;/p>
&lt;/blockquote>
&lt;p>You&amp;rsquo;ll find a clear introduction of these principles &lt;a href="https://landing.google.com/sre/sre-book/chapters/introduction">here&lt;/a>.&lt;/p></description><rr:github>pabluk</rr:github><rr:twitter>pabluk</rr:twitter><rr:plain>This is a quote from the SRE book:
Site reliability engineering (SRE) is one of the fastest-growing enterprise roles and set of operational practices for managing services at scale.
You&amp;rsquo;ll find a clear introduction of these principles here.</rr:plain></item></channel></rss>